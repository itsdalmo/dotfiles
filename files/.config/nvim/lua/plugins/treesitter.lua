return {
  "nvim-treesitter/nvim-treesitter",
  version = false,
  build = ":TSUpdate",
  event = { "BufReadPost", "BufNewFile" },
  dependencies = { "nvim-treesitter/nvim-treesitter-textobjects" },
  keys = {
    { "<c-space>", desc = "Increment selection" },
    { "<bs>", desc = "Decrement selection", mode = "x" },
  },
  opts = {
    highlight = {
      enable = true,
      disable = {},
    },
    indent = {
      enable = true,
      disable = {},
    },
    ensure_installed = {
      "bash",
      "c",
      "dockerfile",
      "fish",
      "gitignore",
      "go",
      "gomod",
      "hcl",
      "html",
      "html",
      "javascript",
      "json",
      "lua",
      "luadoc",
      "luap",
      "markdown",
      "markdown_inline",
      "nix",
      "proto",
      "python",
      "query",
      "regex",
      "terraform",
      "toml",
      "tsx",
      "typescript",
      "vim",
      "vimdoc",
      "yaml",
    },
    incremental_selection = {
      enable = true,
      keymaps = {
        init_selection = "<C-space>",
        node_incremental = "<C-space>",
        scope_incremental = false,
        node_decremental = "<bs>",
      },
    },
    textobjects = {
      select = {
        enable = true,
        lookahead = true,
        keymaps = {
          ["af"] = { query = "@function.outer", desc = "Select outer function" },
          ["if"] = { query = "@function.inner", desc = "Select inner function" },
          ["ac"] = { query = "@class.outer", desc = "Select outer class" },
          ["ic"] = { query = "@class.inner", desc = "Select inner class" },
          ["aa"] = { query = "@parameter.inner", desc = "Select outer paramter" },
          ["ia"] = { query = "@parameter.outer", desc = "Select inner parameter" },
        },
      },
      move = {
        enable = true,
        set_jumps = true,
        goto_next_start = {
          ["]f"] = { query = "@function.outer", desc = "Goto next function" },
          ["]c"] = { query = "@class.outer", desc = "Goto next class" },
          ["]a"] = { query = "@parameter.inner", desc = "Goto next parameter" },
        },
        goto_previous_start = {
          ["[f"] = { query = "@function.outer", desc = "Goto previous function" },
          ["[c"] = { query = "@class.outer", desc = "Goto previous class" },
          ["[a"] = { query = "@parameter.inner", desc = "Goto previous parameter" },
        },
      },
    },
  },
  config = function(_, opts)
    require("nvim-treesitter.configs").setup(opts)
  end,
}
